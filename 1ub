local function MakeTab(def)
    local sideBtn = makeSideItem(def.icon, def.name or "Tab")
    sideBtn.Parent = sidebar

    -- container próprio desta aba (fica dentro de "content")
    local page = Instance.new("ScrollingFrame")
    page.BackgroundTransparency = 1
    page.Position = UDim2.new(0, 10, 0, 44)
    page.Size = UDim2.new(1, -20, 1, -54)
    page.ScrollBarThickness = 6
    page.Visible = false
    page.Parent = content
    local pageList = Instance.new("UIListLayout", page)
    pageList.Padding = UDim.new(0,8)
    pageList.SortOrder = Enum.SortOrder.LayoutOrder
    pageList:GetPropertyChangedSignal("AbsoluteContentSize"):Connect(function()
        page.CanvasSize = UDim2.new(0,0,0,pageList.AbsoluteContentSize.Y + 8)
    end)

    -- helpers desta aba usam o "page" privado (não o pageScroll global)
    local function TAddSection(text)
        local s = Instance.new("TextLabel", page)
        s.BackgroundTransparency = 1
        s.Text = text
        s.Font = Enum.Font.GothamBold
        s.TextXAlignment = Enum.TextXAlignment.Left
        s.TextColor3 = theme.text
        s.TextScaled = true
        s.Size = UDim2.new(1,0,0,24)
        Instance.new("UITextSizeConstraint", s).MaxTextSize = 16
        return s
    end

    local function TAddToggle(iconId, labelText, default, callback)
        local row = Instance.new("Frame", page)
        row.Size = UDim2.new(1, 0, 0, theme.rowHeight)
        row.BackgroundColor3 = theme.row
        Instance.new("UICorner", row).CornerRadius = UDim.new(0, 8)

        local ico = Instance.new("ImageLabel", row)
        ico.BackgroundTransparency = 1
        ico.Image = iconId or "rbxassetid://14862323455"
        ico.Size = UDim2.fromOffset(18,18)
        ico.Position = UDim2.new(0, 12, 0.5, -9)
        ico.ImageColor3 = Color3.fromRGB(235,235,240)

        local label = Instance.new("TextLabel", row)
        label.BackgroundTransparency = 1
        label.Text = string.upper(labelText or "TOGGLE")
        label.Font = Enum.Font.GothamSemibold
        label.TextColor3 = theme.text
        label.TextXAlignment = Enum.TextXAlignment.Left
        label.TextScaled = true
        label.Position = UDim2.new(0, 36, 0, 2)
        label.Size = UDim2.new(1, - (theme.toggleSize.X + 70), 1, -4)
        Instance.new("UITextSizeConstraint", label).MaxTextSize = 16

        local btn = Instance.new("TextButton", row)
        btn.Text = ""
        btn.AutoButtonColor = false
        btn.Size = UDim2.fromOffset(theme.toggleSize.X, theme.toggleSize.Y)
        btn.Position = UDim2.new(1, -(theme.toggleSize.X + 12), 0.5, -math.floor(theme.toggleSize.Y/2))
        btn.BackgroundColor3 = theme.toggle_off
        btn.ClipsDescendants = true
        Instance.new("UICorner", btn).CornerRadius = UDim.new(1,0)

        local knob = Instance.new("Frame", btn)
        knob.Size = UDim2.fromOffset(theme.knobSize.X, theme.knobSize.Y)
        knob.Position = UDim2.new(0, 2, 0.5, -math.floor(theme.knobSize.Y/2))
        knob.BackgroundColor3 = theme.knob_off
        Instance.new("UICorner", knob).CornerRadius = UDim.new(1,0)
        local kS = Instance.new("UIStroke", knob); kS.Transparency = 0.7; kS.Color = Color3.fromRGB(0,0,0)

        local offX = 2
        local onX  = math.max(2, theme.toggleSize.X - theme.knobSize.X - 2)

        local value = default and true or false
        local function paint(v)
            if v then
                Tween:Create(btn,  TweenInfo.new(0.14, Enum.EasingStyle.Quad, Enum.EasingDirection.Out), {BackgroundColor3 = theme.toggle_on}):Play()
                Tween:Create(knob, TweenInfo.new(0.14, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
                    {Position = UDim2.new(0, onX, 0.5, -math.floor(theme.knobSize.Y/2)), BackgroundColor3 = theme.knob_on}):Play()
            else
                Tween:Create(btn,  TweenInfo.new(0.14, Enum.EasingStyle.Quad, Enum.EasingDirection.Out), {BackgroundColor3 = theme.toggle_off}):Play()
                Tween:Create(knob, TweenInfo.new(0.14, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
                    {Position = UDim2.new(0, offX, 0.5, -math.floor(theme.knobSize.Y/2)), BackgroundColor3 = theme.knob_off}):Play()
            end
        end
        paint(value)

        btn.MouseButton1Click:Connect(function()
            value = not value
            paint(value)
            if callback then task.spawn(function() pcall(callback, value) end) end
        end)

        return {
            Set=function(v) value=v and true or false; paint(value); if callback then pcall(callback,value) end end,
            Get=function() return value end
        }
    end

    local function TAddButton(iconId, text, callback)
        local row = Instance.new("TextButton", page)
        row.Text = ""
        row.Size = UDim2.new(1, 0, 0, 44)
        row.BackgroundColor3 = theme.card
        row.AutoButtonColor = true
        Instance.new("UICorner", row).CornerRadius = UDim.new(0,8)

        local ico = Instance.new("ImageLabel", row)
        ico.BackgroundTransparency = 1
        ico.Image = iconId or "rbxassetid://14862323455"
        ico.Size = UDim2.fromOffset(18,18)
        ico.Position = UDim2.new(0, 12, 0.5, -9)
        ico.ImageColor3 = Color3.fromRGB(235,235,240)

        local lbl = Instance.new("TextLabel", row)
        lbl.BackgroundTransparency = 1
        lbl.Text = text or "BUTTON"
        lbl.Font = Enum.Font.GothamBold
        lbl.TextColor3 = theme.text
        lbl.TextXAlignment = Enum.TextXAlignment.Left
        lbl.TextScaled = true
        lbl.Position = UDim2.new(0, 36, 0, 0)
        lbl.Size = UDim2.new(1, -36, 1, 0)
        Instance.new("UITextSizeConstraint", lbl).MaxTextSize = 16

        row.MouseButton1Click:Connect(function() if callback then task.spawn(callback) end end)
    end

    -- abre/fecha visualmente esta aba
    local function openThis()
        -- desmarca botões e esconde páginas das outras abas
        for _,c in ipairs(sidebar:GetChildren()) do
            if c:IsA("TextButton") then
                Tween:Create(c, TweenInfo.new(0.15), {BackgroundColor3 = theme.card}):Play()
            end
        end
        for _,c in ipairs(content:GetChildren()) do
            if c:IsA("ScrollingFrame") then c.Visible = false end
        end
        -- marca esta
        Tween:Create(sideBtn, TweenInfo.new(0.15), {BackgroundColor3 = Color3.fromRGB(50,52,62)}):Play()
        page.Visible = true
        pageTitle.Text = "| " .. (def.name or "Tab")
    end

    local tab = { __name = def.name or "Tab", Open = openThis }
    function tab:AddSection(text) return TAddSection(text) end
    function tab:AddToggle(opt)  return TAddToggle(opt.icon, opt.text, opt.default, opt.callback) end
    function tab:AddButton(opt)  return TAddButton(opt.icon, opt.text, opt.callback) end

    sideBtn.MouseButton1Click:Connect(openThis)

    -- auto-seleciona a 1ª aba criada
    if not sidebar:FindFirstChild("_firstTabSelected") then
        local flag = Instance.new("BoolValue"); flag.Name = "_firstTabSelected"; flag.Parent = sidebar
        openThis()
    end

    return setmetatable(tab, {__index = tab})
end
